#!/usr/bin/env lua

local require = require

if not require then
  if loadfile then -- Assume ComputerCraft
    require = function (name)
      local path = name:gsub (".","/") .. ".lua"
      local env = {}
      setmetatable (env, {__index = _G})
      local f = loadfile (path, env)
      return setmetatable (env, {})
    end
    _G.require = require
  else
    error ("Could not find a suitable replacement for require")
  end
end


local colors = require ("libs.ansicolors")
local toolkit = require ("libs.toolkit")
local utils = require ("libs.utils")

print (colors.cyan .. "LuaMalwareToolkit " .. toolkit.version .. colors.reset)

print ("Please select your virus file:")
local target = io.read ()
if target == "" then target = "virus.lua" end
target = assert (io.open (target, "r"))

print ("Please select the output file")
local output = io.read ()
if output == "" then output = "virus" end
output = assert (io.open (output, "w"))

print ("Please select the modules you want to use:")
local modules_list = utils.list ("./modules")
local modules_names = {}
local i = 0

for k, v in pairs (modules_list) do
  modules_names[i] = v:match("^(.+)%.(.+)$")
  i = i + 1
end

for i = 0, #modules_names do
  local k, v = i, modules_names[i]
  print (string.format ("[%i] %s %s", k, v, ((k==0)and"(default)")or""))
end

local userinput = io.read ()
local modules = {}

if userinput == "" then
  modules = {"loader"}
else
  for m in userinput:gmatch ("(%d*)(;*)") do
    table.insert (modules, modules_names [tonumber (m)])
  end
end

output:write (toolkit.compile (target:read("a"), modules))

target:close ()
output:close ()

print ("Succesfully compiled your virus.")
